#!/usr/bin/env bash

export MISE_LOCKFILE=1
export MISE_EXPERIMENTAL=1

cat <<EOF >.bun-version
1.1.21
EOF

assert "mise i"
assert_contains "mise x bun -- bun -v" "1.1.21"

require_cmd node
assert_contains 'mise x bun -- bunx cowsay "hello world"' "hello world"

echo "=== Testing multi-platform lockfile generation for Bun ==="
# Test generating lockfile for multiple platforms
assert_contains "mise lock bun --platform linux-x64,macos-arm64,windows-x64" "Targeting 3 platform(s): linux-x64, macos-arm64, windows-x64"
assert_contains "mise lock bun --platform linux-x64,macos-arm64,windows-x64" "Lockfile updated at"

# Verify the lockfile contains platform-specific data for all 3 platforms
assert "test -f mise.lock" ""
assert_contains "cat mise.lock" "linux-x64"
assert_contains "cat mise.lock" "macos-arm64"
assert_contains "cat mise.lock" "windows-x64"

# Verify URLs are platform-specific for Bun
assert_contains "cat mise.lock" "bun-linux-x64.zip"
assert_contains "cat mise.lock" "bun-darwin-aarch64.zip"
assert_contains "cat mise.lock" "bun-windows-x64.zip"

# Verify the basic structure is present
assert_contains "cat mise.lock" 'backend = "core:bun"'
assert_contains "cat mise.lock" 'version = "1.1.21"'
assert_contains "cat mise.lock" 'url = "https://github.com/oven-sh/bun/releases'

# Verify sizes are present (GitHub provides asset sizes)
assert_contains "cat mise.lock" "size = "

echo "=== Testing individual platform generation ==="
# Test generating for just one platform
rm -f mise.lock
assert_contains "mise lock bun --platform windows-x64" "Targeting 1 platform(s): windows-x64"
assert_contains "cat mise.lock" "bun-windows-x64.zip"
assert_not_contains "cat mise.lock" "linux-x64"
assert_not_contains "cat mise.lock" "macos-arm64"
